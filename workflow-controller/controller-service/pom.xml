<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.hyscale</groupId>
        <artifactId>workflow-controller</artifactId>
        <version>0.9.3</version>
    </parent>
    <artifactId>controller-service</artifactId>
    <packaging>jar</packaging>
    <name>controller-service</name>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
       <!-- <dependency>
            <groupId>org.springframework.integration</groupId>
            <artifactId>spring-integration-file</artifactId>
            <version>5.1.7.RELEASE</version>
        </dependency>-->
        <dependency>
            <groupId>io.hyscale</groupId>
            <artifactId>controller-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- To avoid split package problem -->
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
        </dependency>
        <!-- Validate Command input -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
            <version>${javax.el-api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>javax.el</artifactId>
            <version>${glassfish.web.javax.el-api.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli-spring-boot-starter</artifactId>
            <version>${picocli.spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>io.hyscale</groupId>
            <artifactId>commons</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.hyscale</groupId>
            <artifactId>service-spec-commons</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.hyscale</groupId>
            <artifactId>deployer-services</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.hyscale</groupId>
            <artifactId>generator-services</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.hyscale</groupId>
            <artifactId>dockerfile-gen-services</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.hyscale</groupId>
            <artifactId>builder-services</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.hyscale</groupId>
            <artifactId>schema-validator</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.hyscale</groupId>
            <artifactId>troubleshooting-integration</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- Status time formatting -->
        <dependency>
            <groupId>org.ocpsoft.prettytime</groupId>
            <artifactId>prettytime</artifactId>
            <version>${ocpsoft.prettytime.version}</version>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>hyscale</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot-maven-plugin.version}</version>
                <configuration>
                    <mainClass>io.hyscale.controller.initializer.HyscaleInitializer</mainClass>
                    <requiresUnpack>
                        <dependency>
                            <groupId>io.kubernetes</groupId>
                            <artifactId>client-java-api</artifactId>
                        </dependency>
                    </requiresUnpack>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <prefix>git</prefix>
                    <verbose>false</verbose>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties
                    </generateGitPropertiesFilename>
                    <gitDescribe>
                        <skip>false</skip>
                        <always>false</always>
                    </gitDescribe>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
